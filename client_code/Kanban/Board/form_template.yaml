properties:
- {name: data, type: object, important: true, default_binding_prop: true, description: Map defining the content of the board.}
is_package: true
events:
- name: x_items_changed
  default_event: true
  description: When an item is dragged and dropped anywhere in the board
  parameters:
  - {name: item, description: The Item Content}
  - {name: muuri, description: The Muuri Item}
  - {name: column, description: Column Name The Item Moved To}
toolbox_item: {title: muuri_board, group: Muuri Components}
custom_component: true
components: []
container:
  type: HtmlTemplate
  properties: {html: "<div class=\"drag-container\"></div>\n<div class=\"board\">\n\
      \  <div anvil-slot=\"board-slot\"></div>\n</div>\n\n<style>\n  * {\n  box-sizing:\
      \ border-box;\n}\nhtml, body {\n  position: relative;\n  width: 100%;\n  height:\
      \ 100%;\n  font-family: Helvetica, Arial, sans-serif;\n}\nbody {\n  margin:\
      \ 0;\n  padding: 20px 10px;\n}\n.drag-container {\n  position: fixed;\n  left:\
      \ 0;\n  top: 0;\n  z-index: 1000;\n}\n.board {\n  position: relative;\n}\n.board-column\
      \ {\n  position: absolute;\n  left: 0;\n  top: 0;\n  padding: 0 10px;\n  \n\
      \  z-index: 1;\n}\n.board-column.muuri-item-releasing {\n  z-index: 2;\n}\n\
      .board-column.muuri-item-dragging {\n  z-index: 3;\n  cursor: move;\n}\n.board-column-container\
      \ {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n.board-column-header\
      \ {\n  position: relative;\n  height: 50px;\n  line-height: 50px;\n  overflow:\
      \ hidden;\n  padding: 0 20px;\n  text-align: center;\n  background: #333;\n\
      \  color: #fff;\n  border-radius: 5px 5px 0 0;\n  font-weight: bold;\n  letter-spacing:\
      \ 0.5px;\n  text-transform: uppercase;\n}\n@media (max-width: 600px) {\n  .board-column-header\
      \ {\n    text-indent: -1000px;\n  }\n}\n\n.board-column-content-wrapper {\n\
      \  position: relative;\n  padding: 8px;\n  background: #f0f0f0;\n  height: calc(100vh\
      \ - 90px);\n  overflow-y: auto;\n  border-radius: 0 0 5px 5px;\n}\n.board-column-content\
      \ {\n  position: relative;\n  min-height: 100%;\n}\n.board-item {\n  position:\
      \ absolute;\n  width: calc(100% - 16px);\n  margin: 8px;\n}\n.board-item.muuri-item-releasing\
      \ {\n  z-index: 9998;\n}\n.board-item.muuri-item-dragging {\n  z-index: 9999;\n\
      \  cursor: move;\n}\n.board-item.muuri-item-hidden {\n  z-index: 0;\n}\n.board-item-content\
      \ {\n  position: relative;\n  padding: 1px;\n  background: #fff;\n  border-radius:\
      \ 4px;\n  font-size: 17px;\n  cursor: pointer;\n  -webkit-box-shadow: 0px 1px\
      \ 3px 0 rgba(0,0,0,0.2);\n  box-shadow: 0px 1px 3px 0 rgba(0,0,0,0.2);\n}\n\
      @media (max-width: 600px) {\n  .board-item-content {\n    text-align: center;\n\
      \  }\n  .board-item-content span {\n    display: none;\n  }\n}\n</style>\n\n\
      <script>\n  \nfunction create_board(items,columns){\n  console.log(\"Start\"\
      )\n  var dragContainer = document.querySelector('.drag-container');\n  var itemContainers\
      \ = [].slice.call(document.querySelectorAll('.board-column-content'));\n  var\
      \ columnGrids = [];\n  var boardGrid;\n  var itemIndex = 0;\n  \n  console.log(\"\
      Create Containers\")\n  // Init the column grids so we can drag those items\
      \ around.\n  itemContainers.forEach(function (container) {\n    console.log(\"\
      Adding Container\")\n    var grid = new Muuri(container, {\n      items: items[itemIndex],\
      \ //'.board-item',\n      dragEnabled: true,\n      dragSort: function () {\n\
      \        return columnGrids;\n      },\n      dragContainer: dragContainer,\n\
      \      dragAutoScroll: {\n        targets: (item) => {\n          return [\n\
      \            { element: window, priority: 0 },\n            { element: item.getGrid().getElement().parentNode,\
      \ priority: 1 },\n          ];\n        }\n      },\n    })\n    .on('dragInit',\
      \ function (item) {\n      item.getElement().style.width = item.getWidth() +\
      \ 'px';\n      item.getElement().style.height = item.getHeight() + 'px';\n \
      \   })\n    .on('dragReleaseEnd', function (item) {\n      item.getElement().style.width\
      \ = '';\n      item.getElement().style.height = '';\n      item.getGrid().refreshItems([item]);\n\
      \    })\n    .on('layoutStart', function () {\n      boardGrid.refreshItems().layout();\n\
      \    });\n    \n    columnGrids.push(grid);\n    itemIndex += 1\n  });\n  console.log(\"\
      Grids Added\")\n  // Init board grid so we can drag those columns around.\n\
      \  console.log(\"Adding Board\")\n  boardGrid = new Muuri('.board', {\n    items:\
      \ columns,\n    dragEnabled: true,\n    dragHandle: '.board-column-header'\n\
      \  }); \n  console.log(\"Done!\")\n}\n\n</script>"}
  event_bindings: {show: form_show}
